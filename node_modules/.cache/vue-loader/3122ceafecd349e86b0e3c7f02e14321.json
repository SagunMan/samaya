{"remainingRequest":"/home/roshan/projects/TVC Open Source/samaya/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/roshan/projects/TVC Open Source/samaya/src/components/Links.vue?vue&type=style&index=0&id=e1fe918e&lang=scss&scoped=true&","dependencies":[{"path":"/home/roshan/projects/TVC Open Source/samaya/src/components/Links.vue","mtime":1598075235047},{"path":"/home/roshan/projects/TVC Open Source/samaya/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/TVC Open Source/samaya/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/roshan/projects/TVC Open Source/samaya/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/roshan/projects/TVC Open Source/samaya/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/TVC Open Source/samaya/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/TVC Open Source/samaya/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudG9nZ2xlIHsKICBmb250LXNpemU6IDEuMnJlbTsKICBjb2xvcjogd2hpdGU7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["Links.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA","file":"Links.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"links\">\n    <div class=\"toggle\">\n      <i class=\"fal fa-sticky-note\"></i>\n      <br>\n      <i class=\"fal fa-clipboard-list-check\"></i>\n    </div>\n\n    <div class=\"dropdown\"></div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"Links\",\n  props: {},\n  data() {\n    return {\n      quote: {\n        text:\n          \"समस्या, समस्या होइन। समस्या, समस्याको बारेमा तपाईंको दृष्टिकोण हो।\"\n      }\n    };\n  },\n\n  created() {\n    // this.startClock();\n  },\n\n  methods: {},\n\n  computed: {\n    ...mapGetters(\"settings\", [\"clockFormat\"])\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n.toggle {\n  font-size: 1.2rem;\n  color: white;\n  cursor: pointer;\n}\n</style>\n"]}]}