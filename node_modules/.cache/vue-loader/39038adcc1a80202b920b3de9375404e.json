{"remainingRequest":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/roshan/projects/playground/samaya/samaya-chrome-ext/src/components/Quote.vue?vue&type=style&index=0&id=d33ce708&lang=scss&scoped=true&","dependencies":[{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/src/components/Quote.vue","mtime":1600918617876},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucXVvdGUgewogIGZvbnQtc2l6ZTogMXJlbTsKICBjb2xvcjogd2hpdGU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGN1cnNvcjogZGVmYXVsdDsKfQo="},{"version":3,"sources":["Quote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA","file":"Quote.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"quote\" v-if=\"quote\">“{{quote.text}}”</div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\nexport default {\n  name: \"Calendar\",\n  created() {\n    // fetch new quote if its 1 day old\n    if (this.quote && this.quote.fetchedAt) {\n      let stale = moment(this.quote.fetchedAt, \"x\").isBefore(\n        moment().subtract(1, \"d\")\n      );\n      if (stale) this.fetchRandomQuote();\n    } else this.fetchRandomQuote();\n  },\n\n  methods: {\n    fetchRandomQuote() {\n      fetch(\"https://bibhuticoder.github.io/samaya-quotes-api/quotes/metadata.json\")\n        .then(r => r.json())\n        .then(metadata => {\n          let randomPage = _.random(1, metadata.totalPages);\n          fetch(\n            \"https://bibhuticoder.github.io/samaya-quotes-api/quotes/\" +\n              randomPage +\n              \".json\"\n          )\n            .then(r => r.json())\n            .then(quotesData => {\n              let randomQuote = quotesData[_.random(0, quotesData.length - 1)];\n              this.$store.commit(\"quote/setQuote\", {\n                ...randomQuote,\n                fetchedAt: Date.now()\n              });\n              console.log(randomQuote);\n            });\n        });\n    }\n  },\n\n  computed: {\n    ...mapGetters(\"quote\", [\"quote\"])\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n.quote {\n  font-size: 1rem;\n  color: white;\n  text-align: center;\n  cursor: default;\n}\n</style>\n"]}]}