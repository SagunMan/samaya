{"remainingRequest":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/roshan/projects/playground/samaya/samaya-chrome-ext/src/components/Clock.vue?vue&type=style&index=0&id=666c7303&lang=scss&scoped=true&","dependencies":[{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/src/components/Clock.vue","mtime":1598178254385},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roshan/projects/playground/samaya/samaya-chrome-ext/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jbG9jayB7CiAgY29sb3I6IHdoaXRlOwogIGZvbnQtc2l6ZTogOHJlbTsKICBmb250LWZhbWlseTogIlJob2RpdW0gTGlicmUiLCBzZXJpZjsKICBsZXR0ZXItc3BhY2luZzogMXJlbTsKICBAaW5jbHVkZSBub3Qtc2VsZWN0YWJsZTsKfQo="},{"version":3,"sources":["Clock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Clock.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"clock\">{{timeTxt | npNumber}}</div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"Clock\",\n  props: {},\n  data() {\n    return {\n      clockTimer: null,\n      timeTxt: null\n    };\n  },\n\n  created() {\n    this.startClock();\n    this.$store.commit(\"settings/setClockFormat\", 24);\n    console.log(this.state);\n  },\n\n  methods: {\n    startClock() {\n      this.timeTxt = this.computeClockText();\n      this.clockTimer = setInterval(() => {\n        this.timeTxt = this.computeClockText();\n      }, 1000);\n    },\n\n    computeClockText() {\n      let now = new Date();\n      let hr = now.getHours();\n      if (this.clockFormat == 12) hr = hr % 12 || 12;\n      let mins = now.getMinutes() + \"\";\n      if (mins.length === 1) mins = \"0\" + mins;\n      return hr + \":\" + mins;\n    }\n  },\n\n  computed: {\n    ...mapGetters(\"settings\", [\"state\", \"clockFormat\"])\n\n    // timeTxt() {\n    //   let now = new Date();\n    //   let hr = now.getHours();\n    //   if (this.clockFormat == 12) hr = hr % 12 || 12;\n    //   let mins = now.getMinutes() + \"\";\n    //   if (mins.length === 1) mins = \"0\" + mins;\n    //   return hr + \":\" + mins;\n    // }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n.clock {\n  color: white;\n  font-size: 8rem;\n  font-family: \"Rhodium Libre\", serif;\n  letter-spacing: 1rem;\n  @include not-selectable;\n}\n</style>"]}]}